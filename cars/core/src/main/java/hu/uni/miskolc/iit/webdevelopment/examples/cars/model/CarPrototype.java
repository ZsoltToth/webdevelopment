package hu.uni.miskolc.iit.webdevelopment.examples.cars.model;


/**
 * Created by tothzs on 2017.11.24..
 *
 * CarPrototype represents an abstract car.
 * It defines attributes the are usually same for each cars of the same type.
 */
public class CarPrototype {

    /**
     * Producer of the given prototype, such as Suzuki, Opel etc.
     */
    private CarProducer producer;
    /**
     * Model of the car. It depends on the producer. For example, Swift or Astra.
     */
    private String model;
    /**
     * Define the body of the car.
     * Some car models are produced with different bodies.
     * For example, Renault Megan has Sedan and Coupe versions.
     */
    private CarBodyStyle bodyStyle;
    /**
     * Year when the given model was introduced to the market.
     */
    private int yearOfIntroduction;
    /**
     * Any note about this prototype.
     */
    private String note;

    /**
     * Weight of the empty car.
     * It is defined in kg.
     */
    private int crubWeight;
    /**
     * Maximum weight of the vehicle in kg.
     */
    private int grossVehicleWeight;
    /**
     * number of doors.
     * It may depends on the body type.
     * Only 2,3,4 and 5 door cars a supported.
     */
    private DoorNumber doorNumber;
    /**
     * Performance of the engine in kW.
     */
    private double enginePerformance;



    public CarPrototype(CarProducer producer, String model, CarBodyStyle bodyStyle, int yearOfIntroduction, String note, int crubWeight, int grossVehicleWeight, DoorNumber doorNumber, double enginePerformance) {

        this.producer = producer;
        this.model = model;
        this.bodyStyle = bodyStyle;
        this.yearOfIntroduction = yearOfIntroduction;
        this.note = note;
        this.crubWeight = crubWeight;
        this.grossVehicleWeight = grossVehicleWeight;
        this.doorNumber = doorNumber;
        this.enginePerformance = enginePerformance;
    }

    public CarProducer getProducer() {
        return producer;
    }

    public String getModel() {
        return model;
    }

    public CarBodyStyle getBodyStyle() {
        return bodyStyle;
    }

    public int getYearOfIntroduction() {
        return yearOfIntroduction;
    }

    public String getNote() {
        return note;
    }

    public int getCrubWeight() {
        return crubWeight;
    }

    public int getGrossVehicleWeight() {
        return grossVehicleWeight;
    }

    public DoorNumber getDoorNumber() {
        return doorNumber;
    }

    public double getEnginePerformance() {
        return enginePerformance;
    }

    /**
     * Identifies the prototype.
     * It should be generated by BRAND_MODEL_CARBODYSTYLE_YEAR
     */
    public String prototypeId(){
        return String.format("%s_%s_%s_%d",producer,model,bodyStyle,yearOfIntroduction);
    }
}
